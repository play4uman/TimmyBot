// <auto-generated />
using System;
using Files.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Files.Migrations
{
    [DbContext(typeof(FilesDbContext))]
    [Migration("20210212092854_RenameKeywordsTable")]
    partial class RenameKeywordsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FileMetadataFileTag", b =>
                {
                    b.Property<Guid>("TaggedFilesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagsTag")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TaggedFilesId", "TagsTag");

                    b.HasIndex("TagsTag");

                    b.ToTable("FileMetadataFileTag");
                });

            modelBuilder.Entity("Files.DAL.Models.FileMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferredParagraphDelimiter")
                        .HasColumnType("int");

                    b.Property<int>("WordCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FileMetadata");
                });

            modelBuilder.Entity("Files.DAL.Models.FileMetadataKeyword", b =>
                {
                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KeywordId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Times")
                        .HasColumnType("int");

                    b.HasKey("FileId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.ToTable("FileMetadataKeyword");
                });

            modelBuilder.Entity("Files.DAL.Models.FileTag", b =>
                {
                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Tag");

                    b.ToTable("FileTags");
                });

            modelBuilder.Entity("Files.DAL.Models.Keyword", b =>
                {
                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Word");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("FileMetadataFileTag", b =>
                {
                    b.HasOne("Files.DAL.Models.FileMetadata", null)
                        .WithMany()
                        .HasForeignKey("TaggedFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Files.DAL.Models.FileTag", null)
                        .WithMany()
                        .HasForeignKey("TagsTag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Files.DAL.Models.FileMetadataKeyword", b =>
                {
                    b.HasOne("Files.DAL.Models.FileMetadata", "File")
                        .WithMany("AssociatedKeywords")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Files.DAL.Models.Keyword", "Keyword")
                        .WithMany("OfFiles")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Keyword");
                });

            modelBuilder.Entity("Files.DAL.Models.FileMetadata", b =>
                {
                    b.Navigation("AssociatedKeywords");
                });

            modelBuilder.Entity("Files.DAL.Models.Keyword", b =>
                {
                    b.Navigation("OfFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
